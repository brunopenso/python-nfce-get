def fill_company_data(json, soup):
    div = soup.find(id="Emitente")
    tds = div.find_all('td')
    for td in tds:
        label = clear_text(td.find('label').get_text())
        value = clear_text(td.find('span').get_text())
        if (label == 'CNPJ'):
            json['local']['cnpj'] = value
        if (label == 'Nome / Razão Social'):
            json['local']['name'] = value
        if (label == 'Endereço'):
            json['local']['address'] = value
        if (label == 'Bairro / Distrito'):
            json['local']['address'] += " - " + value
        if (label == 'Município'):
            json['local']['address'] += " - " + remove_numbers(value)

def fill_itens(json, soup):
    div = soup.find(id="Prod")
    tables = div.find_all('table')
    for i in range(len(tables)):
        if (i == 0 or (i+1) >= len(tables)):
            continue
        table1 = tables[i]
        table2 = tables[i+1]
        if (table1 is None or table2 is None):
            continue
        classes1 = table1['class']
        classes2 = table2['class']
        if ('toggle' in classes1
            and 'box' in classes1
            and 'toggable' in classes2
            and 'box' in classes2):
            fill_item(json, tables[i], tables[i+1])

def fill_item(json, table1, table2):
    json_item = {}
    tds = table1.find_all('td')
    for column in tds:
        clazz = column['class'][0]
        value = clear_text(column.get_text())
        if (clazz == 'fixo-prod-serv-descricao'):
            json_item['name'] = value
        if (clazz == 'fixo-prod-serv-qtd'):
            qtde = str(float(value.replace(',', '.')))
            if (qtde.split('.')[1] == "0"):
                qtde = qtde.split('.')[0]
            json_item['quantity'] = qtde.replace('.', ',')
        if (clazz == 'fixo-prod-serv-uc'):
            json_item['unit'] = value.upper()
        if (clazz == 'fixo-prod-serv-vb'):
            json_item['totalValue'] = value.strip()
    tds2 = table2.find_all('td')
    for column in tds2:
        if (column.find('label') == None):
            continue
        label = clear_text(column.find('label').get_text())
        value = clear_text(column.find('span').get_text())
        if (label == 'Código do Produto'):
            json_item['code'] = value
        if (label == 'Valor unitário de comercialização'):
            unitary_value = float(value.replace(',', '.'))
            json_item['unitaryValue'] = str(unitary_value).replace('.', ',')
    json['itens'].append(json_item)

def fill_nfce_totals(json, soup):
    div = soup.find(id="Totais")
    tds = div.find_all('td')
    for td in tds:
        label = clear_text(td.find('label').get_text())
        value = clear_text(td.find('span').get_text())
        if (label == 'Valor Total dos Produtos'):
            json['totals']['total'] = value
        if (label == 'Valor Total dos Descontos'):
            json['totals']['discounts'] = value
        if ('Valor Aproximado dos Tributos' in label):
            json['totals']['taxes'] = value
        if (label == 'Valor Total da NFe'):
            json['totals']['valueToPay'] = value
    json['totals']['quantityItens'] = len(json['itens'])

def fill_nfce_infos(json, soup):
    divs = soup.find_all('div')
    for div in divs:
        if (div['class'][0] == "GeralXslt"):
            tds = div.find_all('td')
            for td in tds:
                label = clear_text(td.find('label').get_text())
                value = clear_text(td.find('span').get_text())
                if (label == 'Chave de Acesso'):
                    json['nfce']['chave'] = normalize_key(value)
                if (label == 'Número'):
                    json['nfce']['numero'] = value
                if (label == 'Versão XML'):
                    json['nfce']['version'] = value
        break
    nfce = soup.find(id='NFe')
    tds = nfce.find_all('td')
    for td in tds:
        if (td.find('label') is None or td.find('span') is None):
             continue
        label = clear_text(td.find('label').get_text())
        value = clear_text(td.find('span').get_text())
        if (label == "Data de Emissão"):
            json['nfce']['date'] = value.replace('-03:00','')
        if (label == "Série"):
            json['nfce']['serie'] = value
        if (label == 'Protocolo'):
            json['nfce']['protocolo'] = value

def get_json_from_html(data):
    json = {
        'local': {
        },
        'itens': [],
        'totals': {
        },
        'nfce': {
        }
    }
    soup = BeautifulSoup(data, 'html.parser')

    fill_company_data(json, soup)

    fill_itens(json, soup)

    fill_nfce_totals(json, soup)

    fill_nfce_infos(json, soup)

    return json